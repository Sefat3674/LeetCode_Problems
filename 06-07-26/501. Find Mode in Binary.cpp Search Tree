
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> findMode(TreeNode* root) {
       unordered_map<int,int>freq;
       int maxfreq=0;

       inorder(root,freq,maxfreq);
       vector<int>modes;

       for(auto &p :freq){
        if(p.second==maxfreq)
            modes.push_back(p.first);


       }
       return modes;
        
    }
private:
    void inorder(TreeNode* root,unordered_map<int,int> &freq, int &maxfreq){
        if(root==nullptr) return;

        inorder(root->left,freq,maxfreq);
        freq[root->val]++;

        maxfreq=max(maxfreq,freq[root->val]);
        inorder(root->right,freq,maxfreq);
    }
};
